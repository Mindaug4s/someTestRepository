<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Mindaug4s-PC" name="Test all main functionallities" tests="41" failures="2" timestamp="21 Jun 2017 18:27:56 GMT" time="24.914" errors="0">
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <failure type="org.openqa.selenium.remote.UnreachableBrowserException" message="Error communicating with the remote browser. It may have died.
Build info: version: &amp;apos;2.53.1&amp;apos;, revision: &amp;apos;a36b8b1cd5757287168e54b817830adce9b0158d&amp;apos;, time: &amp;apos;2016-06-30 19:26:09&amp;apos;
System info: host: &amp;apos;Mindaug4s-PC&amp;apos;, ip: &amp;apos;192.168.56.1&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.8.0_101&amp;apos;
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=47.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 75235d3b-757f-4f6c-b3eb-60c5619c49d2">
      <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Mindaug4s-PC', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_101'
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=47.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 75235d3b-757f-4f6c-b3eb-60c5619c49d2
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701)
	at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:521)
	at tests.BaseTestPattern.closeBrowser(BaseTestPattern.java:32)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:7056 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)
	at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 29 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134)
	... 44 more
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.votingResults.TestIfCandidateSearchIsAvailable">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.votingResults.TestIfCandidateSearchIsAvailable">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districts.TestEditFunction">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districts.TestEditFunction">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.administration.countyResults.TestCountyResultsPageIsAvailable">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.administration.countyResults.TestCountyResultsPageIsAvailable">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.representative.TestIfRepresentativePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.representative.TestIfRepresentativePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.representative.TestIfRepresentativePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.representative.TestIfRepresentativePageHasMainComponents">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="@BeforeMethod prepareForTest" time="0.0" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- @BeforeMethod prepareForTest -->
  <testcase name="@AfterMethod closeBrowser" time="0.0" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- @AfterMethod closeBrowser -->
  <testcase name="testIfWebPageTitleHeaderIsAvailable" time="12.234" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <failure type="org.openqa.selenium.NoSuchElementException" message="Unable to locate element: {&amp;quot;method&amp;quot;:&amp;quot;id&amp;quot;,&amp;quot;selector&amp;quot;:&amp;quot;website-page-title&amp;quot;}
Command duration or timeout: 10.04 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &amp;apos;2.53.1&amp;apos;, revision: &amp;apos;a36b8b1cd5757287168e54b817830adce9b0158d&amp;apos;, time: &amp;apos;2016-06-30 19:26:09&amp;apos;
System info: host: &amp;apos;Mindaug4s-PC&amp;apos;, ip: &amp;apos;192.168.56.1&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.8.0_101&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=47.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: d289ae25-348d-454a-88c4-bd68e3c355b9
*** Element info: {Using=id, value=website-page-title}">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: {"method":"id","selector":"website-page-title"}
Command duration or timeout: 10.04 seconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Mindaug4s-PC', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_101'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=47.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: d289ae25-348d-454a-88c4-bd68e3c355b9
*** Element info: {Using=id, value=website-page-title}
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy7.isDisplayed(Unknown Source)
	at tests.homepage.TestIfHomePageHasMainComponents.testIfWebPageTitleHeaderIsAvailable(TestIfHomePageHasMainComponents.java:18)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: {"method":"id","selector":"website-page-title"}
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Mindaug4s-PC', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_101'
Driver info: driver.version: unknown
	at <anonymous class>.FirefoxDriver.prototype.findElementInternal_(file:///C:/Users/MINDAU~1/AppData/Local/Temp/anonymous1753031544479347351webdriver-profile/extensions/fxdriver@googlecode.com/components/driver-component.js:10770)
	at <anonymous class>.fxdriver.Timer.prototype.setTimeout/<.notify(file:///C:/Users/MINDAU~1/AppData/Local/Temp/anonymous1753031544479347351webdriver-profile/extensions/fxdriver@googlecode.com/components/driver-component.js:625)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- testIfWebPageTitleHeaderIsAvailable -->
  <testcase name="testIfLoginButtonAvailble" time="6.663" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <failure type="org.openqa.selenium.remote.UnreachableBrowserException" message="Error communicating with the remote browser. It may have died.
Build info: version: &amp;apos;2.53.1&amp;apos;, revision: &amp;apos;a36b8b1cd5757287168e54b817830adce9b0158d&amp;apos;, time: &amp;apos;2016-06-30 19:26:09&amp;apos;
System info: host: &amp;apos;Mindaug4s-PC&amp;apos;, ip: &amp;apos;192.168.56.1&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.8.0_101&amp;apos;
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=47.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 75235d3b-757f-4f6c-b3eb-60c5619c49d2">
      <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Mindaug4s-PC', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_101'
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=47.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 75235d3b-757f-4f6c-b3eb-60c5619c49d2
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at com.sun.proxy.$Proxy7.isDisplayed(Unknown Source)
	at tests.homepage.TestIfHomePageHasMainComponents.testIfLoginButtonAvailble(TestIfHomePageHasMainComponents.java:28)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:7056 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:162)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)
	at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 32 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134)
	... 47 more
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- testIfLoginButtonAvailble -->
  <testcase name="testIfCandidateSearchMenuElementAvailble" time="0.001" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfCandidateSearchMenuElementAvailble -->
  <testcase name="testIfSingleMandateResultsMenuElementAvailble" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfSingleMandateResultsMenuElementAvailble -->
  <testcase name="testIfMultiMandateResultsMenuElementAvailble" time="0.001" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfMultiMandateResultsMenuElementAvailble -->
  <testcase name="testIfSummarizedResultsMenuElementAvailble" time="0.0" classname="tests.homepage.TestIfHomePageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfSummarizedResultsMenuElementAvailble -->
  <testcase name="testIfDistrictsMenuElementIsAvailable" time="0.001" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfDistrictsMenuElementIsAvailable -->
  <testcase name="testIfDistrictCandidatesMenuElementIsAvailable" time="0.0" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfDistrictCandidatesMenuElementIsAvailable -->
  <testcase name="testIfCountyRepresentativesMenuElementIsAvailable" time="0.002" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfCountyRepresentativesMenuElementIsAvailable -->
  <testcase name="testIfPartiesMenuElementIsAvailable" time="0.001" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfPartiesMenuElementIsAvailable -->
  <testcase name="testIfCountyResultsMenuElementIsAvailable" time="0.001" classname="tests.administration.TestIfAdministratorPageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfCountyResultsMenuElementIsAvailable -->
  <testcase name="testIfMainCandidateSearchComponentsAreAvailable" time="0.0" classname="tests.votingResults.TestIfCandidateSearchIsAvailable">
    <skipped/>
  </testcase> <!-- testIfMainCandidateSearchComponentsAreAvailable -->
  <testcase name="testIfSingleDistrictCanBeCreatedWithValidData" time="0.001" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- testIfSingleDistrictCanBeCreatedWithValidData -->
  <testcase name="testIfSingleDistrictCanBeCreatedWithValidData" time="0.001" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- testIfSingleDistrictCanBeCreatedWithValidData -->
  <testcase name="testIfSingleDistrictCanBeCreatedWithInvalidData" time="0.001" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- testIfSingleDistrictCanBeCreatedWithInvalidData -->
  <testcase name="testIfSingleDistrictCanBeCreatedWithInvalidData" time="0.001" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- testIfSingleDistrictCanBeCreatedWithInvalidData -->
  <testcase name="testIfSingleDistrictCanBeCreatedWithNullData" time="0.001" classname="tests.administration.districts.TestDistrictCreation">
    <skipped/>
  </testcase> <!-- testIfSingleDistrictCanBeCreatedWithNullData -->
  <testcase name="testIfDistrictAndCountyCanBeCreatedWithValidData" time="0.002" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- testIfDistrictAndCountyCanBeCreatedWithValidData -->
  <testcase name="testIfDistrictAndCountyCanBeCreatedWithValidData" time="0.001" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- testIfDistrictAndCountyCanBeCreatedWithValidData -->
  <testcase name="testIfDistrictAndCountyCanBeCreatedWithInvalidData" time="0.001" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- testIfDistrictAndCountyCanBeCreatedWithInvalidData -->
  <testcase name="testIfDistrictAndCountyCanBeCreatedWithInvalidData" time="0.001" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- testIfDistrictAndCountyCanBeCreatedWithInvalidData -->
  <testcase name="testIfDistrictAndCountyCanBeCreatedWithdNullData" time="0.005" classname="tests.administration.districts.TestDistrictAndCountyCreation">
    <skipped/>
  </testcase> <!-- testIfDistrictAndCountyCanBeCreatedWithdNullData -->
  <testcase name="testIfSingleDistrictCanBeCreatedWithValidData" time="0.001" classname="tests.administration.districts.TestEditFunction">
    <skipped/>
  </testcase> <!-- testIfSingleDistrictCanBeCreatedWithValidData -->
  <testcase name="prepareTheDistrict" time="0.002" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- prepareTheDistrict -->
  <testcase name="testIfDistrictCandidatesCanBeAddedToSpecificDistrict" time="0.001" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- testIfDistrictCandidatesCanBeAddedToSpecificDistrict -->
  <testcase name="testIfCandidatsCanBeRemovedFromTheDistrict" time="0.001" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- testIfCandidatsCanBeRemovedFromTheDistrict -->
  <testcase name="removeTheDistrict" time="0.002" classname="tests.administration.districtCandidates.TestIfCandidatesCanBeAddedAndDeleted">
    <skipped/>
  </testcase> <!-- removeTheDistrict -->
  <testcase name="prepareTheDistrictAndCounty" time="0.001" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- prepareTheDistrictAndCounty -->
  <testcase name="testIfRepresentativeCanBeCreatedAndDeleted" time="0.003" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- testIfRepresentativeCanBeCreatedAndDeleted -->
  <testcase name="testIfRepresentativeCanNotBeCreatedWithNullParameters" time="0.001" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- testIfRepresentativeCanNotBeCreatedWithNullParameters -->
  <testcase name="removeTheDistrict" time="0.092" classname="tests.administration.countyRepresentatives.TestIfCountyRepresentativeCanBeCreatedAndDeleted">
    <skipped/>
  </testcase> <!-- removeTheDistrict -->
  <testcase name="testIfDistrictCandidatesCanBeAddedToSpecificDistrict" time="0.001" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- testIfDistrictCandidatesCanBeAddedToSpecificDistrict -->
  <testcase name="testIfCandidatesCanBeDeletedFromTheParty" time="0.001" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- testIfCandidatesCanBeDeletedFromTheParty -->
  <testcase name="testIfPartyCanBeDeletedFromTheDistrict" time="0.001" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- testIfPartyCanBeDeletedFromTheDistrict -->
  <testcase name="testIfPartyCanBeCreatedWithNullParameters" time="0.001" classname="tests.administration.parties.TestIfCandidatesCanBeUploadedToPartyAndDeleted">
    <skipped/>
  </testcase> <!-- testIfPartyCanBeCreatedWithNullParameters -->
  <testcase name="testIfMainElementsAreAvailable" time="0.0" classname="tests.administration.countyResults.TestCountyResultsPageIsAvailable">
    <skipped/>
  </testcase> <!-- testIfMainElementsAreAvailable -->
  <testcase name="testIfSingleMandateVotingResultsWebpartIsAvailable" time="0.0" classname="tests.representative.TestIfRepresentativePageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfSingleMandateVotingResultsWebpartIsAvailable -->
  <testcase name="testIfMultisMandateVotingResultsWebpartIsAvailable" time="0.0" classname="tests.representative.TestIfRepresentativePageHasMainComponents">
    <skipped/>
  </testcase> <!-- testIfMultisMandateVotingResultsWebpartIsAvailable -->
  <testcase name="testIfSingleMandateVotingResultsCanBeUploaded" time="0.0" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- testIfSingleMandateVotingResultsCanBeUploaded -->
  <testcase name="testIfMultiMandateVotingResultsCanBeUploaded" time="0.001" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- testIfMultiMandateVotingResultsCanBeUploaded -->
  <testcase name="testIfAdministratorCanRejectVotingResults" time="0.001" classname="tests.representative.TestIfRepresentativeCanUploadResultsAndAdminRejectThem">
    <skipped/>
  </testcase> <!-- testIfAdministratorCanRejectVotingResults -->
</testsuite> <!-- Test all main functionallities -->
